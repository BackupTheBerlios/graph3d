<?xml version="1.0" encoding="UTF-8" ?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">

	<!-- define the root element of the XML file -->
	<xsd:element name="graph" type="graphType" />
	
	<!-- define that what is contained the root element (graph) -->
	<xsd:complexType name="graphType">
		<xsd:sequence>
			<xsd:element name="node" type="nodeType" minOccurs="1" maxOccurs="unbounded" />
			<xsd:element name="link" type="linkType" minOccurs="0" maxOccurs="unbounded" />
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="optional" />
	</xsd:complexType>
	
	<!-- define that what is contained the nodes element -->
	<xsd:complexType name="nodeType">
		<xsd:sequence>
			<xsd:element name="enum-attr" type="attrType" minOccurs="0" maxOccurs="unbounded" />
			<xsd:element name="coordonates" type="coordonatesType" minOccurs="1" maxOccurs="1" />
		</xsd:sequence>
		<xsd:attribute name="class" type="xsd:string" use="optional" />
		<xsd:attribute name="name" type="xsd:string" use="required" />
		<xsd:attribute name="radius" type="xsd:float" use="optional" />
		
	</xsd:complexType>

	<!-- define that what is contained the links element -->
	<xsd:complexType name="linkType">
		<xsd:sequence>
			<xsd:element name="enum-attr" type="attrType" minOccurs="0" maxOccurs="unbounded" />
		</xsd:sequence>
		<xsd:attribute name="type" use="required">
			<!-- This attributs can only take values specified next
				There are two type of link arrow and bridge
					An arrow is a oriented link
					A bridge is an non-oriented link
			-->
			<xsd:simpleType>
				<xsd:restriction base="xsd:NMTOKEN">
					<xsd:enumeration value="arrow" />
					<xsd:enumeration value="bridge" />
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="color" use="optional">
			<!-- This attributs can only take values specified next
				The colors defines are :
					black
					white
					red
					blue
					cyan
					grey
					green
					magenta
					orange
					pink
					yellow
			-->
			<xsd:simpleType>
				<xsd:restriction base="xsd:NMTOKEN">
					<xsd:enumeration value="black" />
					<xsd:enumeration value="blue" />
					<xsd:enumeration value="cyan" />
					<xsd:enumeration value="green" />
					<xsd:enumeration value="grey" />
					<xsd:enumeration value="magenta" />
					<xsd:enumeration value="orange" />
					<xsd:enumeration value="pink" />
					<xsd:enumeration value="red" />
					<xsd:enumeration value="white" />
					<xsd:enumeration value="yellow" />
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="class" type="xsd:string" use="optional" />
		<!-- The attribute link_start specify, in the case where the type equals "arrow", the source node of the link 
			If the type is bridge, link_start define a extremity of the link. That's all.-->
		<xsd:attribute name="link_start" type="xsd:string" use="required" />
		<!-- The attribute link_end specify, in the case where the type equals "arrow", the sink node of the link
			If the type is bridge, link_end define a extremity of the link. That's all.-->
		<xsd:attribute name="link_end" type="xsd:string" use="required" />
		<!-- the identifier of the link -->
		<xsd:attribute name="name" type="xsd:string" use="required" />
	</xsd:complexType>
	
	<!-- define the content of the element enum_attr -->
	<xsd:complexType name="attrType">
		<xsd:attribute name="attr-name" type="xsd:string" use="required" />
		<xsd:attribute name="attr-type" use="required">
			<xsd:simpleType>
				<xsd:restriction base="xsd:NMTOKEN">
					<xsd:enumeration value="short" />
					<xsd:enumeration value="byte" />
					<xsd:enumeration value="int" />
					<xsd:enumeration value="long" />
					<xsd:enumeration value="float" />
					<xsd:enumeration value="double" />
					<xsd:enumeration value="char" />
					<xsd:enumeration value="String" />
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="attr-value" type="xsd:string" use="required" />
	</xsd:complexType>
	
	<!-- define the content of the element coordonates -->
	<xsd:complexType name="coordonatesType">
		<xsd:attribute name="x" type="xsd:string" use="required" />
		<xsd:attribute name="y" type="xsd:string" use="required" />
		<xsd:attribute name="z" type="xsd:string" use="required" />
	</xsd:complexType>
</xsd:schema>
 
